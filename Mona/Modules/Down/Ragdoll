local module = {}
function sub(...)
	coroutine.wrap(...)()
end
return function(creator,char,dur,noin,noexe)
	if not noexe then
		repeat wait()
		until not char:FindFirstChild("Ragdolled")
	end
	if char:FindFirstChild("Ragdolled") then return end
	if char:FindFirstChild("Dodging") then return end
	
	local root = char.HumanoidRootPart
	local Joints = {}
	
	local function createjoint(parent,jointtype)
		local joint = script.Part[jointtype]:clone()
		joint.Parent = parent
		joint.Name = joint.Parent.Name.."Joint"
		local connector = script.Connector:Clone()
		connector.Parent = joint.Parent.Parent.Torso
		connector.Attachment0 = joint.Parent.Parent.Torso:FindFirstChild(joint.Name)
		connector.Attachment1 = joint
		local eh = Instance.new("IntValue")
		eh.Name = "ExtraJoint"
		eh.Parent = joint
		local eh2 = eh:Clone()
		eh2.Parent = connector
		
		table.insert(Joints,joint)
	end
	sub(function()
		for i,v in pairs(script.Torso:GetChildren()) do
			if v.ClassName == "Attachment" then
			v:Clone().Parent = char.Torso
			end
		end
		createjoint(char["Right Arm"],"ArmJoint")
		wait()
		createjoint(char["Left Arm"],"ArmJoint")
		wait()
		createjoint(char["Right Leg"],"LegJoint")
		wait()
	    createjoint(char["Left Leg"],"LegJoint")
		wait()
	end)
	
	local motors = {char.Torso:FindFirstChild("Left Hip"),char.Torso:FindFirstChild("Left Shoulder"),char.Torso:FindFirstChild("Right Hip"),char.Torso:FindFirstChild("Right Shoulder")}
	
	local function motorpoof()
		for i = 1, #motors do
			if motors[i].ClassName == 'Motor6D' then
				motors[i].Parent = nil
			end
		end
	end
	motorpoof()
	local function motoradd()
		for i = 1, #motors do
			if motors[i].ClassName == 'Motor6D' then
				motors[i].Parent = char.Torso
			end
		end
	end
	
	local collisionBoxes = {}
	local Parts = {char["Right Arm"];char["Left Arm"];char["Right Leg"];char["Left Leg"]}
	for i, v in pairs(Parts) do
		local box = v:Clone()
		box.Transparency = 1
		box.Massless = true
		box.CanCollide = true
		box.Anchored = false
		box.Name = "CollisionBox"
		box.Size = box.Size - Vector3.new(.4,.2,.4)
		
		local weld = Instance.new("Weld")
		weld.Part0 = v
		weld.Part1 = box
		weld.Parent = box
		
		box.Parent = char
		table.insert(collisionBoxes,box)
	end
	
	local hum= char.Humanoid
	local stateType = Enum.HumanoidStateType
	
	hum:SetStateEnabled(stateType.Ragdoll, true)
	hum:SetStateEnabled(stateType.FallingDown, true)
	hum:SetStateEnabled(stateType.GettingUp, false)
	
	hum:ChangeState(Enum.HumanoidStateType.FallingDown)
	hum.PlatformStand = true
	
	if noexe then
		ex = Instance.new('BoolValue')
		ex.Name = 'NoExecute'
		ex.Parent = char
	end
	
	local ragdolled = Instance.new('BoolValue')
	ragdolled.Name = 'Ragdolled'
	ragdolled.Parent = char
	
	if not noin then
	nohurt = Instance.new('BoolValue')
	nohurt.Name = 'NoHurt'
	nohurt.Parent = char--]]
	end
	
	local c = Instance.new("NumberValue")
	c.Name = "creator"
	c.Value = dur
	c.Parent = char
		
	local stun = Instance.new('BoolValue')	
	stun.Name = 'CombatDisable'
	stun.Parent = char
	
	local slow = Instance.new('BoolValue')	
	slow.Name = 'Slow'
	slow.Parent = char.Effects
	
	hum.AutoRotate = false
	
	local i = 0
	
	for i, v in pairs(Parts) do
		v.CanCollide = true
	end
	
	delay(dur,function()
		
	end)
	
	while wait(.5) do
		if (char:FindFirstChild('Carried') or char:FindFirstChild('Gripped')) then
			hum.PlatformStand = false
			motoradd()
			hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
			hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false)
			repeat wait(.5) until not char:FindFirstChild("Carried") and not char:FindFirstChild("Gripped")
		else
			hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
			hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
			hum.PlatformStand = true
			motorpoof()
		end
		
		hum.AutoRotate = false
		
		if not c.Value then
			break
		end
		
		if hum.Health <= 0 then
			break
		end
		
		i = i + .5
		if i > dur or char:FindFirstChild("GetUpTag") then
			break
		end
	end
	
	stun:Destroy()
	if nohurt then
	nohurt:Destroy()
	end
	if ex then
	ex:Destroy()
	end
	hum.PlatformStand = false
	ragdolled:Destroy()
	hum.AutoRotate = true
	slow:Destroy()
	motoradd()
	
	hum:SetStateEnabled(stateType.Ragdoll, false)
	hum:SetStateEnabled(stateType.GettingUp, true)
	hum:SetStateEnabled(stateType.FallingDown, false)
	hum:ChangeState(Enum.HumanoidStateType.GettingUp)
	
	for i, v in pairs(Parts) do
		v.CanCollide = false
	end
	
	local gyro = Instance.new('BodyGyro')
	gyro.Parent = char.HumanoidRootPart
	gyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
	gyro.D = 300
	gyro.CFrame = CFrame.Angles(0,math.pi,0)
	game.Debris:AddItem(gyro,.55)
	for i, v in pairs(Joints) do
		if v then v:Destroy() end
	end
	for i, v in pairs(collisionBoxes) do
		v:Destroy()
	end
end
