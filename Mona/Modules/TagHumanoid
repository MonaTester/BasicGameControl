local module = {}
function HitInjury(target)
	
	local function ScreenEffect()
		local player1 = game.Players:GetPlayerFromCharacter(target)
		if player1 then
		game.ReplicatedStorage.BlurScreen:FireClient(player1,.2)
		game.ReplicatedStorage.ScreenShake:FireClient(player1,.2)
		end
	end
	
	local ehum = target.Humanoid
	
	if ehum.Health <= ehum.MaxHealth / 6 then
		ScreenEffect()
		target.HumanoidRootPart.Blood:Emit(13)
	elseif ehum.Health <= ehum.MaxHealth / 5 then
		target.HumanoidRootPart.Blood:Emit(8)
	elseif ehum.Health <= ehum.MaxHealth / 4 then
		target.HumanoidRootPart.Blood:Emit(6)
	end
	
end

function sub(...)
	coroutine.wrap(...)()
end
local CombatTagCap = 20
function CountCombatTags(target)
	local Eff = target.Effects:GetChildren()
	local total = 0
	for i, v in pairs(Eff) do
		if v.Name == "InCombat" then
			total = total + 1
		end
	end
	if total >= 17 then
		return
	else
		return true
	end
end
return function(character,target,DamageTable,NoStunAnim,NoDamageStack,CombatTag)
	if character:FindFirstChild("NPC") and target:FindFirstChild("NPC") then
		return
	end
	if character:FindFirstChild("NPC") and character:FindFirstChild("DemonDeath") and target:FindFirstChild("DemonDeath") then
		return
	end
	if target:FindFirstChild("NoHurt") and not target:FindFirstChild("Knocked") then
		return
	end
	if target.Humanoid.Health < 1 then
		return
	end
	local root = character.HumanoidRootPart
	local hum = character.Humanoid
	
	local eroot = target.HumanoidRootPart
	local ehum = target.Humanoid
	
	local Damage = DamageTable[1]
	local StunTime = DamageTable[2]
	local Sharp = DamageTable[3]
	local IgnoreBlock = DamageTable[4]
	local CanExecute = DamageTable[5]
	
	local RagdollTime = DamageTable[4]
	if not RagdollTime then
		RagdollTime = 20
	end
	
	if target:FindFirstChild("Target") then
		target.Target.Value = character
	end
	
	local player = game.Players:GetPlayerFromCharacter(character)
	
	if Damage and not NoDamageStack then
		for i, v in pairs(character:GetChildren()) do
			if v.Name == "DamageBuff" then
				Damage = Damage + v.Value
			end
		end
		for i, v in pairs(character:GetChildren()) do
			if v.Name == "DamageMultiplier" then
				Damage = Damage * v.Value
			end
		end
	end
	
	if target:FindFirstChild("Blocking") and not IgnoreBlock then
		local parryAnim = ehum:LoadAnimation(script:FindFirstChild("Parry"..math.random(1, 2)))
		parryAnim:Play()
		local Tool = target:FindFirstChildWhichIsA("Tool")
		if Sharp and Damage then
			if (Tool and Tool:FindFirstChild("Blade")) then
				eroot.Sparks:Emit(10)
				eroot:FindFirstChild("BladeClash"..math.random(1,3)):Play()
				eroot.SparkLight.Enabled = true
				spawn(function()
					wait(.3)
					eroot.SparkLight.Enabled = false
				end)
			else
				eroot.FleshHit:Play()
				eroot.Blood:Emit(3)
				if ehum.Health - (Damage / 2) > 5 then
					ehum:TakeDamage(Damage / 2)
				end
			end
			return
		end
		eroot.BlockSound:Play()
		eroot.Block:Emit(1)
		return
	end
	
	if Sharp then
		eroot.Blood:Emit(3)
	end
	
	if ehum.Health <= ehum.MaxHealth / 4 then
		HitInjury(target)
	end
	
	if Damage then
		if character:FindFirstChild("FireProc") and character:FindFirstChild("FireProc").Value == true and Sharp then
			local m = require(game.ServerScriptService.CombatExtra)
			m:ProcFire(target)
		end
		
		if target:FindFirstChild("ExplosionHits") and target:FindFirstChild("ExplosionHits").Value < 3 then
			target:FindFirstChild("ExplosionHits").Value = target:FindFirstChild("ExplosionHits").Value + 1
		end
		
		local CanCombatTag = CountCombatTags(target)
		if CanCombatTag and not CombatTag then
		local CombatTag = Instance.new("BoolValue")
		CombatTag.Name = "InCombat"
		CombatTag.Parent = target.Effects
		game.Debris:AddItem(CombatTag,40)
		end
		
		local CanCombatTag2 = CountCombatTags(character)
		if CanCombatTag2 and not CombatTag then
		local CombatTag = Instance.new("BoolValue")
		CombatTag.Name = "InCombat"
		CombatTag.Parent = character.Effects
		game.Debris:AddItem(CombatTag,40)
		end
		
		if Sharp and player and target.Name == "Boulder" then
			local stats = game.ReplicatedStorage[".stats"]:WaitForChild(player.Name)
			if stats.SwordExp.Value > 2000 then
				Damage = 9999999
			end
		end
		
		--else
		if ehum.Health - Damage < 1 and not target:FindFirstChild("Knocked") and not CanExecute and target.Name ~= "Boulder" then
			local knock = require(game.ServerScriptService.KnockingService)
			knock(character,target,20)
			ehum.Health = 1
		else
			if target:FindFirstChild("Knocked") or (CanExecute and ehum.Health - Damage < 1) then
				Damage = 100000000
			end
			if (target:FindFirstChild("Knocked") and (target:FindFirstChild("DemonDeath") and not Sharp)) then
				Damage = 0
			end
			ehum:TakeDamage(Damage)
		end
		if ehum.Health < 1 then
			
			if target:FindFirstChild("DemonDeath") then
				
				if target.Name == "Boulder" and player then
					local stats = game.ReplicatedStorage[".stats"]:WaitForChild(player.Name)
					stats.DestroyedBoulder.Value = true
				end
				
				_G.DemonDeath(target)
				
				if player and target.Name ~= "Boulder" then
					local stats = game.ReplicatedStorage[".stats"]:WaitForChild(player.Name)
					local add = 1
					if target == character.BountyTarget.Value then
						add = character.BountyTarget.Exp.Value
						stats.Yen.Value = stats.Yen.Value + character.BountyTarget.Yen.Value
						
						character.BountyTarget.Value = nil
						character.BountyTarget.Exp.Value = 0
						character.BountyTarget.Yen.Value = 0
					end
					stats.DemonKills.Value = stats.DemonKills.Value + add
				end
			else
				if player then
					local stats = game.ReplicatedStorage[".stats"]:WaitForChild(player.Name)
					stats.SlayerKills.Value = stats.SlayerKills.Value + 1
				end
			end
			
		end
		
		if ehum.Health < 1 then
			ehum:TakeDamage(9999999)
			if player and target.Name ~= "Boulder" then
				local stats = game.ReplicatedStorage[".stats"]:WaitForChild(player.Name)
				
				local player2 = game.Players:GetPlayerFromCharacter(target)
				if player2 then
					local stats2 = game.ReplicatedStorage[".stats"]:WaitForChild(player2.Name)
					stats2.Yen.Value = stats2.Yen.Value - (stats2.Yen.Value / 2)
					stats2.DemonKills.Value = stats2.DemonKills.Value - .5
					stats2.SlayerKills.Value = stats2.SlayerKills.Value - .5
					if stats2.DemonKills.Value < 0 then
						stats2.DemonKills.Value = 0
					end
					if stats2.SlayerKills.Value < 0 then
						stats2.SlayerKills.Value = 0
					end
				end
				
				if (stats.Alignment.Value == "Slayer" and target:FindFirstChild("DemonDeath")) or (stats.Alignment.Value == "Demon" and not target:FindFirstChild("DemonDeath")) and target.Name ~= "Boulder" then
				stats.Yen.Value = stats.Yen.Value + math.random(7,20)
				if stats.Alignment.Value == "Slayer" then
					local crow = game.ServerStorage.Crow:Clone()
					crow.Parent = workspace.Effects
					crow:SetPrimaryPartCFrame(root.CFrame * CFrame.new(10,10,20))
					game.Debris:AddItem(crow,7)
					
					crow.HumanoidRootPart.BodyVelocity.Velocity = crow.HumanoidRootPart.CFrame.lookVector * 30
					crow.HumanoidRootPart.Crow:Play()
					
					local money = game.ServerStorage.Dollar:Clone()
					money.CFrame = crow.HumanoidRootPart.CFrame
					money.Parent = workspace.Effects
					game.Debris:AddItem(money,10)--]]
				end
				end
				
				if stats.Alignment.Value == "Demon" then
					hum:TakeDamage(-(ehum.MaxHealth / 2))
					
					local cd = Instance.new("BoolValue")
					cd.Name = "CombatDisable"
					cd.Parent = character
					
					local roar = hum:LoadAnimation(script.Roar)
					roar:Play()
					
					root.PLUS:Emit(7)
					
					hum.AutoRotate = false
					hum.WalkSpeed = 0
					sub(function()
						wait(.8)
						cd:Destroy()
						hum.WalkSpeed = character:WaitForChild("BaseSpeed").Value
						hum.AutoRotate = true
					end)
					
					if hum.Health > hum.MaxHealth then
						hum.Health = hum.MaxHealth
					end
				end
			end
		end
		--end
	end
	if StunTime ~= nil then
		local Stun = Instance.new("BoolValue")
		Stun.Name = "Stunned"
		Stun.Parent = target
		
		game.Debris:AddItem(Stun,StunTime)
		
		if character:FindFirstChild("YoriichiBlade") and Sharp then
		local nullify = Instance.new("BoolValue")
		nullify.Name = "RegenNullify"
		nullify.Parent = target
		
		game.Debris:AddItem(nullify,StunTime*4)
			
		end
		
		sub(function()
			ehum.WalkSpeed = 2
			local NoJump = Instance.new("BoolValue")
			NoJump.Name = "NoJump"
			NoJump.Parent = character.Effects
			ehum.JumpPower = 0
			for i = 1, 2 do wait(StunTime + .5)
				if not target:FindFirstChild("Stunned") then
					ehum.WalkSpeed = target:WaitForChild("BaseSpeed").Value
					ehum.JumpPower = target:WaitForChild("JumpPower").Value
					break
				end
			end
			NoJump:Destroy()
		end)
		
		if not NoStunAnim and target.Name ~= "Boulder" then
			local anim = ehum:LoadAnimation(script:FindFirstChild("Stun"..math.random(1,3)))
			anim:Play()
		end
	end
end
