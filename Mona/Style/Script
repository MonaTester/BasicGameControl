local ItemModule = require(game.ServerScriptService.Modules.ItemModule)
game.ReplicatedStorage.Remotes.GetFightingStyle.OnServerEvent:Connect(function(player,Style)
	local PlayerStats = game.ReplicatedStorage[".stats"]:FindFirstChild(player.Name)
	if not PlayerStats then
		return
	end
	
	local Class = Style
	if PlayerStats.FightingStyle.Value == true then
		return
	end--]]
	if Class == "BoarFighting" then
		if PlayerStats.Yen.Value < 35 then
			return
		end
		if PlayerStats.FistExp.Value < 250 then
			return
		end
		if PlayerStats.FightingStyleGot.Value == false then
			PlayerStats.FightingStyleGot.Value = true
		end
		local Backpack = PlayerStats.Tools
		local Items = {"Low Kick";"Flexible Kick";"Show Off"}
		
		PlayerStats.FightingClass.Value = "BoarFighting"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 35
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.FightingStyle.Value = Maxed
	elseif Class == "SerpentFighting" then
		if PlayerStats.Yen.Value < 50 then
			return
		end
		if PlayerStats.SwordExp.Value < 250 then
			return
		end
		if PlayerStats.FightingStyleGot.Value == false then
			PlayerStats.FightingStyleGot.Value = true
		end
		local Backpack = PlayerStats.Tools
		local Items = {"Serpent Strike";"Serpent Flash";"Coil Slash";}
		
		PlayerStats.FightingClass.Value = "SerpentFighting"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 50
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.FightingStyle.Value = Maxed
	end
end)