local ItemModule = require(game.ServerScriptService.Modules.ItemModule)
game.ReplicatedStorage.Remotes.GetClass.OnServerEvent:Connect(function(player,Class)
	local PlayerStats = game.ReplicatedStorage[".stats"]:FindFirstChild(player.Name)
	if not PlayerStats then
		return
	end
	if PlayerStats.BreathingClass.Value == true then
		return
	end
	if PlayerStats.Breathing.Value == true and (PlayerStats.BreathingStyle.Value ~= Class and PlayerStats.BreathingStyle.Value ~= "") then
		return
	end
	if Class == "WaterBreathing" then
		if PlayerStats.Yen.Value < 35 then
			return
		end
		if PlayerStats.SwordExp.Value < 1000 then
			return
		end
		if PlayerStats.DemonKills.Value < 5 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		local Backpack = PlayerStats.Tools
		local Items = {"Surface Slash";"Water Wheel";"Striking Tide"}
		
		PlayerStats.BreathingStyle.Value = "WaterBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 35
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	elseif Class == "ThunderBreathing" then
		if PlayerStats.Yen.Value < 35 then
			return
		end
		if PlayerStats.SwordExp.Value < 2000 then
			return
		end
		if PlayerStats.DemonKills.Value < 5 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		local Backpack = PlayerStats.Tools
		local Items = {"Thunderclap and Flash";"Lightning Ball"}
		
		PlayerStats.BreathingStyle.Value = "ThunderBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 35
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	elseif Class == "FlameBreathing" then
		if PlayerStats.Yen.Value < 35 then
			return
		end
		if PlayerStats.SwordExp.Value < 2000 then
			return
		end
		if PlayerStats.DemonKills.Value < 5 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		local Backpack = PlayerStats.Tools
		local Items = {"Unknowing Fire";"Rising Scorching Sun";"Blooming Flame Undulation"}
		
		PlayerStats.BreathingStyle.Value = "FlameBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 35
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	elseif Class == "WindBreathing" then
		if PlayerStats.Yen.Value < 25 then
			return
		end
		if PlayerStats.SwordExp.Value < 2000 then
			return
		end
		if PlayerStats.DemonKills.Value < 15 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		local Backpack = PlayerStats.Tools
		local Items = {"Dust Whirlwind Cutter";"Claws Purifying Wind";"Clean Storm Wind Tree"}
		
		PlayerStats.BreathingStyle.Value = "WindBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 25
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	elseif Class == "MistBreathing" then
		if PlayerStats.Yen.Value < 30 then
			return
		end
		if PlayerStats.SwordExp.Value < 2000 then
			return
		end
		if PlayerStats.DemonKills.Value < 15 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		
		local Backpack = PlayerStats.Tools
		local Items = {"Distant Mist";"Eight Layered Mist";"Demisting Blast"}
		
		PlayerStats.BreathingStyle.Value = "MistBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 30
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	elseif Class == "InsectBreathing" then
		if PlayerStats.Yen.Value < 30 then
			return
		end
		if PlayerStats.SwordExp.Value < 2000 then
			return
		end
		if PlayerStats.DemonKills.Value < 15 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		
		local Backpack = PlayerStats.Tools
		local Items = {"Frolic";"Mere Fluttering";}
		
		PlayerStats.BreathingStyle.Value = "InsectBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 40
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	elseif Class == "SoundBreathing" then
		if PlayerStats.Yen.Value < 30 then
			return
		end
		if PlayerStats.SwordExp.Value < 2000 then
			return
		end
		if PlayerStats.DemonKills.Value < 15 then
			return
		end
		if PlayerStats.Breathing.Value == false then
			PlayerStats.Breathing.Value = true
		end
		
		local Backpack = PlayerStats.Tools
		local Items = {"Death Knells of Avici";"Roar";"Symphony of Shrill Strings"}
		
		PlayerStats.BreathingStyle.Value = "SoundBreathing"
		PlayerStats.Yen.Value = PlayerStats.Yen.Value - 40
		
		local Item = Items[math.random(1,#Items)]
		if Backpack:FindFirstChild(Item) or Backpack:FindFirstChild(Item) then
			repeat
				wait(.1)
				Item = Items[math.random(1,#Items)]
			until not Backpack:FindFirstChild(Item) and not Backpack:FindFirstChild(Item)
		end
		ItemModule.GiveItem(player,Item)
		local Maxed = true
		for i = 1, #Items do
			if not Backpack:FindFirstChild(Items[i]) and not Backpack:FindFirstChild(Items[i]) then
				Maxed = false
				break
			end
		end
		
		PlayerStats.BreathingClass.Value = Maxed
	end
end)