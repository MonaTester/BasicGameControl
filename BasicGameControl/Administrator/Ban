

_G.AddValue = function(player,Value,Addition)
	local stats = game.ReplicatedStorage[".stats"]:FindFirstChild(player.Name)
	if not stats then return end
	Value.Value = Value.Value + Addition
end

_G.ChangeStat = function(player,Stat,Value)
	local stats = game.ReplicatedStorage[".stats"]:FindFirstChild(player.Name)
	if not stats then return end
	Stat.Value = Value
end

_G.BanPlayer = function(player)
	local stats = game.ReplicatedStorage[".stats"]:FindFirstChild(player.Name)
	if not stats then return end
	local banned = stats.Banned
	banned.Value = true
	player:Kick("You have been banned from the game.")
end
_G.GetPlayerAppearanceInfo = function(player,Stats)
	local Accessory = require(script.Accessory)
	local nameList = Accessory.nameList
	local nameList2 = Accessory.nameList2
	
	local Char = game.Players:GetCharacterAppearanceAsync(player.UserId)
	local Hair = {}
	local Accessories = {}
	local Shirt
	local Pants
	local Face
	local BodyColor
	
	for _,x in pairs(Char:GetChildren()) do
		if x:IsA('Accessory') then
			local attachment = x:FindFirstChildWhichIsA('Attachment',true)
			if attachment and nameList[attachment.Name] then
				if nameList2[attachment.Name] == 'HairAttachment' then
				table.insert(Hair,x)
				else
					table.insert(Accessories,x)
				end
			end
		end
		if x:IsA("BodyColors") then
			BodyColor = x
		end
		if x:IsA('Shirt') then
			Shirt = x
		end
		if x:IsA('Pants') then
			Pants = x
		end
		if x.Name == "Head" then
			local face = x:FindFirstChildWhichIsA("Decal")
			if face then
				Face = face
			end
		end
	end
	
	local character = player.Character
	Accessories = {}
	return 
	{
		["Hair"] = Hair;
		["Accessories"] = Accessories;
		["Shirt"] = Shirt;
		["Pants"] = Pants;
		["Face"] = Face;
		["BodyColors"] = BodyColor;
	}
end

_G.SavedDataTable = 
{
	"Banned";
}
_G.WhiteList = {}
_G.GetBackpack = function(player)
	local Backpack = player.Backpack
	local character = player.Character
	
	local Tools = {}
	for i, v in pairs(character:GetChildren()) do
		if v.ClassName == "Tool" then
			table.insert(Tools,v.Name)
		end
	end
	for i, v in pairs(Backpack:GetChildren()) do
		if v.ClassName == "Tool" then
			table.insert(Tools,v.Name)
		end
	end
	return Tools
end
_G.WipeBackpack = function(player,Stats)
	local character = player.Character
	if character then
	for i, v in pairs(character:GetChildren()) do
		if v.ClassName == "Tool" then
			v:Destroy()
		end
	end
	end
	for i, v in pairs(player.Backpack:GetChildren()) do
		if v.ClassName == "Tool" then
			v:Destroy()
		end
	end
end

_G.AdminList = {"LeeIdoI";"Sagee4";"orange_juice"}
_G.IsAdmin = function(player)
	if game.CreatorId == player.UserId then
		return true
	end
	local AdminList = _G.AdminList
	for i = 1, #AdminList do
		if player.Name == AdminList[i] or player.UserId == AdminList[i] then
			return true
		end
	end
end

_G.IsWhitelisted = function(player)
	for i = 1, #_G.WhiteList do
		if player.Name == _G.WhiteList[i] or player.UserId == _G.WhiteList[i] then
			return true
		end
	end
end
_G.DemonDeath = function(target)
	if target:FindFirstChildWhichIsA("ForceField") then
		return
	end
	if target:FindFirstChild("Body Colors") then
	target["Body Colors"]:Destroy()
	end
	if target:FindFirstChild("Shirt") then
	target["Shirt"]:Destroy()
	end
	if target:FindFirstChild("Pants") then
	target["Pants"]:Destroy()
	end
	for i, v in pairs(target:GetDescendants()) do
		if v.ClassName == "UnionOperation" then
			v:Destroy()
		end
		if v.ClassName == "Accessory" then
			v:Destroy()
		end
		if v.ClassName == "SpecialMesh" then
			v:Destroy()
		end
		if v.ClassName == "Decal" then
			v:Destroy()
		end
		
		if v.ClassName == "MeshPart" or v.ClassName == "Part" then
			v.BrickColor = BrickColor.new("Really black")
			v.Material = "Neon"
			script.Death1:Clone().Parent = v
			script.Death2:Clone().Parent = v
			target.PrimaryPart.MonsterDeath:Play()
			delay(1,function()
			game.TweenService:Create(v,TweenInfo.new(3,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{Size = Vector3.new(0,0,0)}):Play()
			end)
		end
	end
end